"""
Seed data management command for {{ app_name }}
Generated by CoreX v1.0.0
"""

from django.core.management.base import BaseCommand
from django.contrib.auth.models import User
from django.utils import timezone
from faker import Faker
import random
from ...models import *


class Command(BaseCommand):
    help = 'Generate seed data for {{ app_name }} app'
    
    def add_arguments(self, parser):
        parser.add_argument(
            '--count',
            type=int,
            default=10,
            help='Number of records to create'
        )
        parser.add_argument(
            '--clean',
            action='store_true',
            help='Clean existing data before seeding'
        )
    
    def handle(self, *args, **options):
        fake = Faker()
        count = options['count']
        
        if options['clean']:
            self.stdout.write('Cleaning existing data...')
            {% if app_type == 'blog' %}
            Post.objects.all().delete()
            Comment.objects.all().delete()
            Category.objects.all().delete()
            Tag.objects.all().delete()
            {% elif app_type == 'shop' %}
            Product.objects.all().delete()
            Category.objects.all().delete()
            Order.objects.all().delete()
            {% elif app_type == 'wiki' %}
            Page.objects.all().delete()
            PageRevision.objects.all().delete()
            {% elif app_type == 'crm' %}
            Contact.objects.all().delete()
            Deal.objects.all().delete()
            {% elif app_type == 'social' %}
            Post.objects.all().delete()
            Follow.objects.all().delete()
            {% elif app_type == 'forum' %}
            Post.objects.all().delete()
            Topic.objects.all().delete()
            Category.objects.all().delete()
            {% else %}
            {{ app_name|title }}Item.objects.all().delete()
            {% endif %}
        
        # Create users if they don't exist
        users = list(User.objects.all())
        if len(users) < 5:
            for i in range(5 - len(users)):
                user = User.objects.create_user(
                    username=fake.user_name(),
                    email=fake.email(),
                    password='testpass123',
                    first_name=fake.first_name(),
                    last_name=fake.last_name()
                )
                users.append(user)
        
        {% if app_type == 'blog' %}
        # Create categories
        categories = []
        for i in range(5):
            category, created = Category.objects.get_or_create(
                name=fake.word().title(),
                defaults={
                    'slug': fake.slug(),
                    'description': fake.text()
                }
            )
            categories.append(category)
        
        # Create tags
        tags = []
        for i in range(10):
            tag, created = Tag.objects.get_or_create(
                name=fake.word(),
                defaults={'slug': fake.slug()}
            )
            tags.append(tag)
        
        # Create posts
        for i in range(count):
            post = Post.objects.create(
                title=fake.sentence(),
                slug=fake.slug(),
                author=random.choice(users),
                content=fake.text(max_nb_chars=2000),
                excerpt=fake.text(max_nb_chars=200),
                category=random.choice(categories),
                status='published',
                published_at=timezone.make_aware(fake.date_time_this_year())
            )
            post.tags.set(random.sample(tags, random.randint(1, 3)))
            
            # Create comments for each post
            for j in range(random.randint(0, 5)):
                Comment.objects.create(
                    post=post,
                    author=random.choice(users),
                    content=fake.text(max_nb_chars=500),
                    is_approved=True
                )
        
        {% elif app_type == 'shop' %}
        # Create categories
        categories = []
        for i in range(5):
            category = Category.objects.create(
                name=fake.word().title(),
                slug=fake.slug(),
                description=fake.text()
            )
            categories.append(category)
        
        # Create products
        for i in range(count):
            Product.objects.create(
                name=fake.catch_phrase(),
                slug=fake.slug(),
                description=fake.text(),
                price=fake.pydecimal(left_digits=3, right_digits=2, positive=True),
                category=random.choice(categories),
                sku=fake.bothify(text='???-###'),
                stock_quantity=fake.random_int(min=0, max=100),
                is_active=True,
                is_featured=fake.boolean(chance_of_getting_true=20)
            )
        
        {% elif app_type == 'wiki' %}
        # Create pages
        for i in range(count):
            page = Page.objects.create(
                title=fake.sentence(),
                slug=fake.slug(),
                content=fake.text(max_nb_chars=2000),
                author=random.choice(users),
                is_published=True
            )
            
            # Create revisions
            for j in range(random.randint(1, 3)):
                PageRevision.objects.create(
                    page=page,
                    content=fake.text(max_nb_chars=2000),
                    editor=random.choice(users),
                    comment=fake.sentence()
                )
        
        {% elif app_type == 'crm' %}
        # Create contacts
        contacts = []
        for i in range(count):
            contact = Contact.objects.create(
                first_name=fake.first_name(),
                last_name=fake.last_name(),
                email=fake.unique.email(),
                phone=fake.phone_number(),
                company=fake.company(),
                contact_type=random.choice(['lead', 'customer', 'prospect'])
            )
            contacts.append(contact)
        
        # Create deals
        for i in range(count // 2):
            Deal.objects.create(
                title=fake.catch_phrase(),
                contact=random.choice(contacts),
                amount=fake.pydecimal(left_digits=5, right_digits=2, positive=True),
                stage=random.choice(['qualification', 'proposal', 'negotiation', 'closed_won', 'closed_lost']),
                probability=fake.random_int(min=10, max=90),
                expected_close_date=fake.future_date()
            )
        
        {% elif app_type == 'social' %}
        # Create profiles
        for user in users:
            Profile.objects.get_or_create(
                user=user,
                defaults={
                    'bio': fake.text(max_nb_chars=500),
                    'location': fake.city(),
                    'website': fake.url()
                }
            )
        
        # Create follows
        for i in range(count):
            follower = random.choice(users)
            following = random.choice([u for u in users if u != follower])
            Follow.objects.get_or_create(
                follower=follower,
                following=following
            )
        
        # Create posts
        for i in range(count):
            Post.objects.create(
                author=random.choice(users),
                content=fake.text(max_nb_chars=280)
            )
        
        {% elif app_type == 'forum' %}
        # Create categories
        categories = []
        for i in range(5):
            category = Category.objects.create(
                name=fake.word().title(),
                description=fake.text()
            )
            categories.append(category)
        
        # Create topics
        topics = []
        for i in range(count):
            topic = Topic.objects.create(
                title=fake.sentence(),
                category=random.choice(categories),
                author=random.choice(users),
                is_pinned=fake.boolean(chance_of_getting_true=10)
            )
            topics.append(topic)
        
        # Create posts
        for topic in topics:
            for i in range(random.randint(1, 5)):
                Post.objects.create(
                    topic=topic,
                    author=random.choice(users),
                    content=fake.text(max_nb_chars=1000)
                )
        
        {% else %}
        # Create items
        for i in range(count):
            {{ app_name|title }}Item.objects.create(
                name=fake.catch_phrase(),
                description=fake.text()
            )
        {% endif %}
        
        self.stdout.write(
            self.style.SUCCESS(f'Successfully created seed data for {{ app_name }}')
        )